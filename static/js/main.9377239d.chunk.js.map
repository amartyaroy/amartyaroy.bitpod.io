{"version":3,"sources":["Images/mypic.png","Component/landingPage.jsx","Component/aboutMe.jsx","Component/projects.jsx","Component/contact.jsx","Component/main.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","LandingPage","style","width","margin","Container","fluid","className","Row","Col","md","alt","src","image","Component","AboutMe","Projects","Contact","Main","exact","path","component","Contacts","App","collapseOnSelect","expand","bg","variant","Brand","href","Toggle","aria-controls","Collapse","id","Link","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"8FAAAA,EAAOC,QAAU,IAA0B,mC,+PCItBC,E,uKAEjB,OACE,yBAAKC,MAAO,CAAEC,MAAO,OAAQC,OAAQ,SACnC,kBAACC,EAAA,EAAD,CAAWC,OAAK,EAACC,UAAU,gBACzB,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAKC,GAAI,IACP,yBACEC,IAAI,iBACJJ,UAAU,cACVK,IAAKC,MAEP,yBAAKN,UAAU,eACb,6DACA,6BACA,sI,GAfyBO,a,QCFpBC,E,uKAGb,OACI,6BACI,6C,GALqBD,aCAhBE,E,uKAGb,OACI,6BACI,4C,GALsBF,aCAjBG,E,uKAGb,OACI,6BACI,2C,GALqBH,aCmBtBI,EAbJ,WACP,OACI,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOC,OAAK,EAAEC,KAAK,IAAKC,UAAYpB,IACpC,kBAAC,IAAD,CAAOmB,KAAK,WAAWC,UAAYN,IACnC,kBAAC,IAAD,CAAOK,KAAK,YAAYC,UAAYL,IACpC,kBAAC,IAAD,CAAOI,KAAK,YAAYC,UAAYC,MC2BjCC,MApCf,WACE,OACE,6BACE,kBAAC,IAAD,CACEC,kBAAgB,EAChBC,OAAO,KACPC,GAAG,OACHC,QAAQ,OACRpB,UAAU,gBAEV,kBAAC,IAAsBqB,MAAvB,CAA6BC,KAAK,KAAlC,gBAGA,kBAAC,IAAsBC,OAAvB,CAA8BC,gBAAc,0BAC5C,kBAAC,IAAsBC,SAAvB,CAAgCC,GAAG,yBACjC,kBAAC,IAAD,CAAoB1B,UAAU,YAC9B,kBAAC,IAAD,KACE,kBAAC,IAAmB2B,KAApB,CAAyBL,KAAK,YAA9B,YAGA,kBAAC,IAAmBK,KAApB,CAAyBL,KAAK,aAA9B,YAGA,kBAAC,IAAmBK,KAApB,CAAyBL,KAAK,aAA9B,cAMN,yBAAKtB,UAAU,gBACb,kBAAC,EAAD,SCvBY4B,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,YCVNC,IAASC,OACP,kBAAC,IAAD,KAAe,kBAAC,EAAD,OAEfC,SAASC,eAAe,SDwHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.9377239d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/mypic.8a02b12c.png\";","import React, { Component } from \"react\";\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\nimport image from \"../Images/mypic.png\";\r\n\r\nexport default class LandingPage extends Component {\r\n  render() {\r\n    return (\r\n      <div style={{ width: \"100%\", margin: \"auto\" }}>\r\n        <Container fluid className=\"landing-grid\">\r\n          <Row>\r\n            <Col md={12}>\r\n              <img\r\n                alt=\"amartyaProfile\"\r\n                className=\"profile-img\"\r\n                src={image}\r\n              ></img>\r\n              <div className=\"banner-text\">\r\n                <h1>Full Stack Software Developer</h1>\r\n                <hr/>\r\n                <p>HTML|CSS|BOOTSTRAP|JAVASCRIPT|REACT|MATERIALIZE|HANDLEBARjs|C#|NODEJS|EXPRESS|MYSQL|DOTNETCORE</p>\r\n              </div>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\n\r\nexport default class AboutMe extends Component {\r\n    \r\n    render() { \r\n        return ( \r\n            <div>\r\n                <h1>about me</h1>\r\n            </div>\r\n         );\r\n    }\r\n}\r\n \r\n","import React, { Component } from 'react';\r\n\r\nexport default class Projects extends Component {\r\n    \r\n    render() { \r\n        return ( \r\n            <div>\r\n                <p>projects</p>\r\n            </div>\r\n         );\r\n    }\r\n}\r\n ","import React, { Component } from 'react';\r\n\r\nexport default class Contact extends Component {\r\n    \r\n    render() { \r\n        return ( \r\n            <div>\r\n                <p>Contact</p>\r\n            </div>\r\n         );\r\n    }\r\n}\r\n ","import React from 'react';\r\nimport LandingPage from './landingPage';\r\nimport { Switch,Route } from 'react-router-dom';\r\nimport AboutMe from './aboutMe';\r\nimport Projects from './projects';\r\nimport Contacts from './contact';\r\n\r\n\r\nconst Main=()=>{\r\n    return (\r\n        <Switch>\r\n            <Route exact  path=\"/\"  component={ LandingPage } />\r\n            <Route path=\"/aboutme\" component={ AboutMe}/>\r\n            <Route path=\"/projects\" component={ Projects}/>\r\n            <Route path=\"/contacts\" component={ Contacts}/>\r\n\r\n\r\n        </Switch>\r\n    )\r\n}\r\n\r\nexport default Main;","import React from \"react\";\nimport \"./App.css\";\nimport * as ReactBootstrap from \"react-bootstrap\";\nimport Main from \"./Component/main\";\nimport { Link } from \"react-router-dom\";\nfunction App() {\n  return (\n    <div>\n      <ReactBootstrap.Navbar\n        collapseOnSelect\n        expand=\"lg\"\n        bg=\"dark\"\n        variant=\"dark\"\n        className=\"header-color\"\n      >\n        <ReactBootstrap.Navbar.Brand href=\"#\">\n          MY PORTFOLIO\n        </ReactBootstrap.Navbar.Brand>\n        <ReactBootstrap.Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n        <ReactBootstrap.Navbar.Collapse id=\"responsive-navbar-nav\">\n          <ReactBootstrap.Nav className=\"mr-auto\"></ReactBootstrap.Nav>\n          <ReactBootstrap.Nav>\n            <ReactBootstrap.Nav.Link href=\"/aboutme\">\n              About Me\n            </ReactBootstrap.Nav.Link>\n            <ReactBootstrap.Nav.Link href=\"/projects\">\n              Projects\n            </ReactBootstrap.Nav.Link>\n            <ReactBootstrap.Nav.Link href=\"/contacts\">\n              Contact\n            </ReactBootstrap.Nav.Link>\n          </ReactBootstrap.Nav>\n        </ReactBootstrap.Navbar.Collapse>\n      </ReactBootstrap.Navbar>\n      <div className=\"page-content\">\n        <Main />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {BrowserRouter} from 'react-router-dom';\n\n\nReactDOM.render(\n  <BrowserRouter><App /></BrowserRouter>,\n  \n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}